# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
  version: "1.5.8"
  title: EyePick

 

consumes: 
  - application/json
produces:
  - application/json
  
definitions:

  user:
    type: object
    required:
      - username
      - password
      - email
      - id
    properties:
      username:
        type: string
      password: 
        type: string
      email:
        type: string
      id:
        type: integer
        format: int64
        
  #login:
   # type: object
    #required:
     # - username
      #- password
    #properties:
     # username:
      #  type: string
      #password:
       # type: string
       
  category:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: integer
      name:
        type: string
        
      
  
        
        
  newUser:
    type: object
    required:
      - username
      - password 
      - email
    properties:
      username:
        type: string 
      email: 
        type: string  
      password:
        type: string
        
  video:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        
  newVideo:
    type: object
    required:
      - name
      - category
    properties:
      name:
        type: string
      category:
        type: string
    
        
  pick:
   type: object
   required:
      - id
      - name
      - private
   properties:
    id:
      type: integer
    name:
      type: string
    private:
      type: boolean
      
        
# Describe your paths here
paths:
  # This is a path endpoint. Change it.
  /user:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        gets all users
      
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        - name: _sort
          in: query
          
          required: false
          type: string
          
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
             
            type: array
            items:
              title: Person
              type: object
              items:
                $ref: '#/definitions/user'
                
    post:
      summary:  Creates a new user
      description: A intrested user can create an account on EyePick
      operationId: addUser
      parameters:
        - name: username
          in: body
          required: true
          description: User to add to EyePick 
          schema:
            $ref: '#/definitions/newUser'
      
      responses:
        201:
          description: New user created succesfully to Eyepick 
          
          
          
  /user/{uid}:
    parameters:
      - name: uid
        in: path
        required: true
        type: integer
        format: int64
        
    get:
      description: Get a user with *uid*
      responses:
        200:
          description: User succesfully retrieved
          schema:
            $ref: '#/definitions/user'
        404:
          description: User not found
    delete:
      description: Delete a User with *uid*
      responses:
        200:
          description: User deleted 
          schema:
            $ref: '#/definitions/user'
        404:
          description: user not found
    put:
      description: Update a user with *uid*
      operationId: updateUser
      parameters:
        - name: user
          in: body
          required: true
          description: Updates
          schema:
            $ref: '#/definitions/newUser'
      responses:
        200:
          description: User updated
          schema:
            $ref: '#/definitions/user'
        404:
          description: User not found
        
          
 # /user/login:
  
  #  post:
   #   summary: User logs in
    #  description: Login with  username and  password
     # parameters:
      #  - name: user
       #   in: body
      #     required: true
      #     description: Login user
      #     schema:
      #       $ref: "#/definitions/login"
      # responses:
      #   200:
      #     description: Successful response
      #     schema:
      #       $ref: '#/definitions/user'
        
         
        
            
  /user/{uid}/videos:
    parameters:
      - name: uid
        in: path
        required: true
        type: integer
        format: int64
    
  
    post:
      description: User uploads a video
      operationId: addVideo
      parameters:
        - name: video
          in: body
          required: true
          description: Video to add in EyePick
          schema:
            $ref: '#/definitions/newVideo'
      responses:
        201:
          description: Video uploaded
          
  /users/{uid}/videos/{vid}:
    parameters:
      - name: uid
        in: path
        required: true
        type: integer
        format: int64
      - name: vid
        in: path
        required: true
        type: integer
        format: int64
        
        
    
    put:
      description: Update a video with *vid*
      operationId: updateVideo
      parameters:
        - name: video
          in: body
          required: true
          description: Updates
          schema:
            $ref: '#/definitions/newVideo'
      responses:
        200:
          description: Video Updated
          schema:
            $ref: '#/definitions/video'
        404:
          description: Video not found
          
    delete:
      description: Delete a video with *vid*
      responses:
        200:
          description: Video succesfully retrieved
          schema:
            $ref: '#/definitions/video'
        400:
          description: Video not found
        
      
        
        
    